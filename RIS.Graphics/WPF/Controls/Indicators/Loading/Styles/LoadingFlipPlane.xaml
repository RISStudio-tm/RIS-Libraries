<!--Copyright (c) RISStudio, 2020. All rights reserved.-->
<!--Licensed under the Apache License, Version 2.0. See LICENSE file in the project root for license information.-->
    
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:RIS.Graphics.WPF.Controls.Indicators.Loading">

    <Style x:Key="LoadingFlipPlaneStyleKey" TargetType="{x:Type controls:LoadingIndicator}">
        <Style.Triggers>
            <Trigger Property="Mode" Value="FlipPlane">
                <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=controls:LoadingIndicator, ResourceId=LoadingAccentColorBrush}}" />
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Width" Value="40"/>
                <Setter Property="Height" Value="40"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type controls:LoadingIndicator}">
                            <Border x:Name="PART_Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="SizeStates">
                                        <VisualState x:Name="Large"/>
                                        <VisualState x:Name="Small"/>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="ActiveStates">
                                        <VisualState x:Name="Inactive"/>
                                        <VisualState x:Name="Active">
                                            <Storyboard SpeedRatio="{TemplateBinding SpeedRatio}" RepeatBehavior="Forever" Duration="0:0:1.600">
                                                <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.000" Storyboard.TargetName="PART_Rect" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="1"/>
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.400" Value="0"/>
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.800" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.800" Storyboard.TargetName="PART_Rect" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="1"/>
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.400" Value="0"/>
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.800" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>

                                <Grid Background="Transparent">
                                    <Rectangle x:Name="PART_Rect" RenderTransformOrigin="0.5,0.5" Fill="{TemplateBinding Foreground}">
                                        <Rectangle.RenderTransform>
                                            <ScaleTransform/>
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>